package us.aldwin.ambient.models

import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Test
import us.aldwin.ambient.models.AmbientRealtimeDevice.Companion.fromJson
import us.aldwin.ambient.models.AmbientRealtimeDevice.DeviceInfo
import us.aldwin.ambient.models.AmbientRealtimeDevice.DeviceInfo.InfoCoords
import us.aldwin.ambient.models.AmbientRealtimeDevice.DeviceInfo.InfoCoords.Geo
import us.aldwin.ambient.models.AmbientRealtimeDevice.DeviceInfo.InfoCoords.LatLon

class AmbientModelsTest {
    // TODO @NJA: replace with a capture of real data
    @Test
    fun `it round trips`() {
        val device =
            AmbientRealtimeDevice(
                "mac",
                "apiKey",
                AmbientRealtimeData(
                    "date",
                    "tz",
                    123,
                    "mac",
                    "deviceId",
                    mutableMapOf("string" to "xyz"),
                ),
                DeviceInfo(
                    "name",
                    InfoCoords(
                        1.0,
                        Geo(listOf(1.0, 2.0), "type"),
                        "address",
                        "location",
                        LatLon(
                            1.0,
                            2.0,
                        ),
                    ),
                ),
            )

        assertEquals(device, fromJson(device.toJson()))
    }

    private val testData =
        """{
        "aqi_pm25": 66,
        "aqi_pm25_24h": 52,
        "aqi_pm25_24h_aqin": 8,
        "aqi_pm25_aqin": 5,
        "baromabsin": 29.404,
        "baromrelin": 29.40400001,
        "batleak1": 0,
        "batleak2": 0,
        "batleak3": 0,
        "batleak4": 0,
        "batt1": 1,
        "batt2": 1,
        "batt3": 1,
        "batt4": 1,
        "batt5": 1,
        "batt6": 1,
        "batt7": 1,
        "batt8": 1,
        "batt_25": 1,
        "batt_co2": 1,
        "batt_lightning": 0,
        "battin": 1,
        "battsm1": 1,
        "battsm2": 1,
        "battsm3": 1,
        "battsm4": 1,
        "co2_in_24h_aqin": 530,
        "co2_in_aqin": 502,
        "dailyrainin": 0,
        "date": "2023-01-01T03:33:00.000Z",
        "dateutc": 1672543980000,
        "deviceId": "6389adb3dacf080001024d48",
        "dewPoint3": 44.1,
        "dewPoint4": 39.4,
        "dewPoint6": 52.3,
        "dewPoint7": 53.8,
        "dewPoint8": 45.8,
        "dewPointin": 41.7,
        "eventrainin": 0,
        "feelsLike3": 70.4,
        "feelsLike4": 51.1,
        "feelsLike6": 72.5,
        "feelsLike7": 74.2,
        "feelsLike8": 76.2,
        "feelsLikein": 71.9,
        "hourlyrainin": 0,
        "humidity3": 37,
        "humidity4": 64,
        "humidity6": 48,
        "humidity7": 48,
        "humidity8": 33,
        "humidityin": 32,
        "leak1": 1,
        "leak2": 0,
        "leak3": 0,
        "leak4": 1,
        "lightning_day": 7,
        "lightning_distance": 14.91,
        "lightning_hour": 0,
        "lightning_time": 1672490790000,
        "macAddress": "98:CD:AC:22:B9:DB",
        "monthlyrainin": 0,
        "pm10_in_24h_aqin": 2.2,
        "pm10_in_aqin": 1.4,
        "pm25": 19,
        "pm25_24h": 12.9,
        "pm25_in_24h_aqin": 1.9,
        "pm25_in_aqin": 1.2,
        "pm_in_humidity_aqin": 42,
        "pm_in_temp_aqin": 71.2,
        "soilhum1": 0,
        "soilhum2": 48,
        "soilhum3": 78,
        "soilhum4": 1,
        "temp1f": 5.4,
        "temp2f": 50.4,
        "temp3f": 71.8,
        "temp4f": 51.1,
        "temp5f": 65.3,
        "temp6f": 73.2,
        "temp7f": 74.8,
        "temp8f": 77.2,
        "tempinf": 73.4,
        "tz": "America/New_York",
        "weeklyrainin": 0,
        "yearlyrainin": 0
      }"""

    @Test
    fun `it parses a real data example`() {
        val expectedData =
            AmbientRealtimeData(
                "2023-01-01T03:33:00.000Z",
                "America/New_York",
                1672543980000,
                "98:CD:AC:22:B9:DB",
                "6389adb3dacf080001024d48",
                mutableMapOf(
                    "aqi_pm25" to 66,
                    "aqi_pm25_24h" to 52,
                    "aqi_pm25_24h_aqin" to 8,
                    "aqi_pm25_aqin" to 5,
                    "baromabsin" to 29.404,
                    "baromrelin" to 29.40400001,
                    "batleak1" to 0,
                    "batleak2" to 0,
                    "batleak3" to 0,
                    "batleak4" to 0,
                    "batt1" to 1,
                    "batt2" to 1,
                    "batt3" to 1,
                    "batt4" to 1,
                    "batt5" to 1,
                    "batt6" to 1,
                    "batt7" to 1,
                    "batt8" to 1,
                    "batt_25" to 1,
                    "batt_co2" to 1,
                    "batt_lightning" to 0,
                    "battin" to 1,
                    "battsm1" to 1,
                    "battsm2" to 1,
                    "battsm3" to 1,
                    "battsm4" to 1,
                    "co2_in_24h_aqin" to 530,
                    "co2_in_aqin" to 502,
                    "dailyrainin" to 0,
                    "dewPoint3" to 44.1,
                    "dewPoint4" to 39.4,
                    "dewPoint6" to 52.3,
                    "dewPoint7" to 53.8,
                    "dewPoint8" to 45.8,
                    "dewPointin" to 41.7,
                    "eventrainin" to 0,
                    "feelsLike3" to 70.4,
                    "feelsLike4" to 51.1,
                    "feelsLike6" to 72.5,
                    "feelsLike7" to 74.2,
                    "feelsLike8" to 76.2,
                    "feelsLikein" to 71.9,
                    "hourlyrainin" to 0,
                    "humidity3" to 37,
                    "humidity4" to 64,
                    "humidity6" to 48,
                    "humidity7" to 48,
                    "humidity8" to 33,
                    "humidityin" to 32,
                    "leak1" to 1,
                    "leak2" to 0,
                    "leak3" to 0,
                    "leak4" to 1,
                    "lightning_day" to 7,
                    "lightning_distance" to 14.91,
                    "lightning_hour" to 0,
                    "lightning_time" to 1672490790000,
                    "monthlyrainin" to 0,
                    "pm10_in_24h_aqin" to 2.2,
                    "pm10_in_aqin" to 1.4,
                    "pm25" to 19,
                    "pm25_24h" to 12.9,
                    "pm25_in_24h_aqin" to 1.9,
                    "pm25_in_aqin" to 1.2,
                    "pm_in_humidity_aqin" to 42,
                    "pm_in_temp_aqin" to 71.2,
                    "soilhum1" to 0,
                    "soilhum2" to 48,
                    "soilhum3" to 78,
                    "soilhum4" to 1,
                    "temp1f" to 5.4,
                    "temp2f" to 50.4,
                    "temp3f" to 71.8,
                    "temp4f" to 51.1,
                    "temp5f" to 65.3,
                    "temp6f" to 73.2,
                    "temp7f" to 74.8,
                    "temp8f" to 77.2,
                    "tempinf" to 73.4,
                    "weeklyrainin" to 0,
                    "yearlyrainin" to 0,
                ).toSortedMap(),
            )

        val data = AmbientRealtimeData.fromJson(testData).let { it.copy(values = it.values.toSortedMap()) }

        assertEquals(expectedData, data)
    }
}
